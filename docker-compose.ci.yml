version: '2.1'

networks:
  test:
    external: false

services:

  # This file is for the continunous integration testing process.
  # It is meant to start with a freshly cloned repository.
  # It will start with a minimum linux image running node,
  # install package managers, and dependencies, run tests, and in
  # the end, leave us with a minimal production ready docker container
  # that can be run in our cluster.

  # I left the env variables as examples of things
  # you may want to pass in from the CI server
  base:
    image: node:8-alpine
    volumes:
      - .:/usr/src/app/
    working_dir: /usr/src/app/
    environment:
      - NPM_TOKEN=$NPM_TOKEN
      - GH_TOKEN=$GH_TOKEN
      - CI=true
      - JENKINS_URL
      - GIT_BRANCH
      - SNYK_TOKEN=$SNYK_TOKEN

  clean:
    extends:
      service: base
    command: rm -rf node_modules && rm -rf coverage && rm -rf dist

  npmClean:
    extends:
      service: base
    command: rm -rf node_modules" 
  
  version:
    extends:
      service: base
    command: node -p \"require('./package.json').version.replace('\n', '')\"

  # output: node_modules/ with all dependencies
  devDeps:
    extends:
      service: base
    command: npm i

  lint:
    extends:
      service: base
    command: npm run lint

  unit-tests:
    extends:
      service: base
    command: npm run test

  # output: dist/
  build:
    extends:
      service: unit-tests
    command: npm run build

  # also deleting unneeded cache for minimal build size
  prune:
    extends:
      service: base
    command: npm prune --only=production

  # The current directory contains /dist, and /node_modules with only production dependencies
  staging-deps:
    image: myservice
    environment:
      - NODE_ENV=staging
      - LOCALDB
    networks:
      - test

  # reinstall dev deps to get testing tools and run staging tests
  staging:
    extends:
      service: base
    networks:
      - test
    environment:
      - NODE_ENV=staging
      - graphqlURL=http://staging-deps:3010
    command: npm run test:staging

  production:
    extends: 
      service: base
    environment: 
      - graphqlURL=${graphqlURL:-http://localhost:3010}
    command: npm run test:staging